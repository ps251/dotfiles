bind * list-clients

bind r command-prompt "rename-window %%"
bind ^R source-file ~/.config/tmux/tmux.conf
bind ^L refresh-client
bind l refresh-client

bind ^W list-windows

bind z resize-pane -Z

bind | split-window
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"


bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5


# panes other
bind P set pane-border-status
bind * setw synchronize-panes

bind-key -T copy-mode-vi v send-keys -X begin-selection



set-option -g status-interval 10 



bind-key m choose-tree -Zw "join-pane -t '%%'"
bind-key b break-pane

bind -n Ⓜ select-pane -m
bind Ⓜ select-pane -M  # unmark
bind -n ⓧ join-pane -s '{marked}'
bind -n M-S swap-pane -s '{marked}'

bind -n M-w rotate-window -Z

bind x swap-pane -D



bind-key -n 🄽 last-window
bind -n M-< previous-window
bind -n M-> next-window
# Shift Window Index
bind-key -r > swap-window -t +1 \; next-window
bind-key -r < swap-window -t -1 \; previous-window

# Session Navigation
bind-key -n ߸ switch-client -p
bind-key -n ⊙ switch-client -n
bind-key -n 🅽 switch-client -l


bind-key -n 🄁 new -A -s 0
bind-key -n 🄂 new -A -s 1
bind-key -n 🄃 new -A -s 2
bind-key -n 🄄 new -A -s 3
bind-key -n 🄅 new -A -s 4
bind-key -n 🄆 new -A -s 4
bind-key -n 🄇 new -A -s 4
bind-key -n 🄈 new -A -s 4
bind-key -n 🄉 new -A -s 4
bind-key -n 🄊  new -A -s 4


bind ^D detach
bind M-d kill-session
# bind C-d confirm-before -p "Detach from #H:#S? (y/n)" detach-client
# kill-session

bind-key ⓡ command-prompt -p "Session Name: " "rename-session '%1'"


bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi ⓥ send-keys -X rectangle-toggle   # additional v required
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi i send-keys -X cancel


# layout
bind a switch-client -T layout
bind -T layout -r l next-layout
bind -T layout -r h previous-layout
# Switch Layout
bind -T layout -r s select-layout main-horizontal
bind -T layout -r S select-layout even-vertical
bind -T layout -r v select-layout main-vertical
bind -T layout -r V select-layout even-horizontal
bind -T layout -r t select-layout tiled
bind -T layout -r z select-layout zoom

bind-key -r ! next-layout

# bind -T layout o run-shell 'cd /home/peter/Music/'
# bind-key -T layout o  run-shell "tmux send-keys 'cd /home/peter/Music/' Enter"

# bookmarks
bind b switch-client -T bookmark
bind-key -T bookmark d  send-keys 'cd ~/Desktop/' Enter
bind-key -T bookmark r  send-keys 'cd ~/Notes/roam' Enter
bind-key -T bookmark p  send-keys 'cd ~/Notes/roam/projects' Enter
bind-key -T bookmark m  send-keys 'cd ~/Music/mpd/Music/Tracks' Enter
bind-key -T bookmark t  run-shell "~/bin/tmux-sessionizer /home/peter/Notes/roam/projects/Traverse/"

# open
bind o switch-client -T open
bind-key -T open f  run-shell -b "kitty tmux new -t \"$(tmux display-message -p -F '#{session_name}')\""



bind -n 'M-d' if-shell \
			'[ "$(tmux display-message -p "#{window_panes}")" -gt 1 ]' \
			'kill-pane; select-layout; select-layout -E' \
			'kill-pane'


bind -n 🅍 \
		select-pane -t '{bottom-right}' \;\
		split-pane 'sh -c "exec \$(echo \"\$PATH\" | tr \":\" \"\n\" | xargs -I{} -- find {} -maxdepth 1 -mindepth 1 -executable 2>/dev/null | sort -u | fzf)"'


# Increase pane size when entering focus
set -g @pane_resize_amount 20 
# Hook to resize pane when it enters focus
set-hook -g pane-focus-in "run-shell -b 'tmux select-layout; tmux select-layout -E ;if [ #{pane_at_left} -eq 1 ]; then tmux resize-pane -R #{@pane_resize_amount}; elif [ #{pane_at_right} -eq 1 ]; then tmux resize-pane -L #{@pane_resize_amount}; fi
if [ #{pane_at_top} -eq 1 ]; then tmux resize-pane -D #{@pane_resize_amount}; elif [ #{pane_at_bottom} -eq 1 ]; then tmux resize-pane -U #{@pane_resize_amount}; fi'"


unbind-key -T prefix y
bind-key -T prefix y run-shell -b "echo -n `tmux display-message -p -F '#{pane_current_path}/'` | xclip -se c"


# Session Management
bind-key M choose-tree -Zw "move-window -s '%%'"
bind-key -r C-s run-shell "tmux neww ~/bin/tmux-sessionizer"
bind-key f choose-tree -Z
# Storing and restoring with git branch via tmuxp
bind-key M-s run-shell "$HOME/.config/tmux/scripts/tmuxp_save_with_git_branch"
bind-key M-e \
		select-pane -t '{bottom-right}' \;\
		split-pane 'sh -c "tmuxp edit \"$(tmux display-message -p "#{session_name}")\""'
bind-key M-r  \
		select-pane -t '{bottom-right}' \;\
		split-pane 'sh -c "$HOME/.config/tmux/scripts/tmuxp_load_session"'
